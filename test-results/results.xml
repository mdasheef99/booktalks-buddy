<testsuites id="" name="" tests="70" failures="2" skipped="59" errors="0" time="70.281861">
<testsuite name="auth\authentication-flows.spec.ts" timestamp="2025-07-29T07:51:03.809Z" hostname="chromium" tests="14" failures="2" skipped="3" time="176.686" errors="0">
<testcase name="Authentication Flows › Landing Page Navigation › should display landing page with proper sections" classname="auth\authentication-flows.spec.ts" time="20.905">
<failure message="authentication-flows.spec.ts:15:5 should display landing page with proper sections" type="FAILURE">
<![CDATA[  [chromium] › auth\authentication-flows.spec.ts:15:5 › Authentication Flows › Landing Page Navigation › should display landing page with proper sections 

    Error: Timed out 10000ms waiting for expect(locator).toBeVisible()

    Locator: getByRole('main')
    Expected: visible
    Received: <element(s) not found>
    Call log:
      - Expect "toBeVisible" with timeout 10000ms
      - waiting for getByRole('main')


      18 |       
      19 |       // Check for main landing page content using MCP semantic understanding
    > 20 |       await expect(page.getByRole('main')).toBeVisible();
         |                                            ^
      21 |       
      22 |       // Look for navigation or call-to-action elements
      23 |       const loginButton = page.getByRole('link', { name: /login|sign in/i });
        at C:\Users\LEGION\Desktop\Asheef\Bookconnect\booktalks-buddy\tests\e2e\auth\authentication-flows.spec.ts:20:44

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\auth-authentication-flows--da1ad-g-page-with-proper-sections-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    ..\..\test-results\auth-authentication-flows--da1ad-g-page-with-proper-sections-chromium\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\auth-authentication-flows--da1ad-g-page-with-proper-sections-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|auth-authentication-flows--da1ad-g-page-with-proper-sections-chromium\test-failed-1.png]]

[[ATTACHMENT|auth-authentication-flows--da1ad-g-page-with-proper-sections-chromium\video.webm]]

[[ATTACHMENT|auth-authentication-flows--da1ad-g-page-with-proper-sections-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentication Flows › Landing Page Navigation › should navigate to login from landing page" classname="auth\authentication-flows.spec.ts" time="14.444">
</testcase>
<testcase name="Authentication Flows › Landing Page Navigation › should navigate to register from landing page" classname="auth\authentication-flows.spec.ts" time="21.741">
</testcase>
<testcase name="Authentication Flows › Login Page › should display login form with proper elements" classname="auth\authentication-flows.spec.ts" time="15.263">
</testcase>
<testcase name="Authentication Flows › Login Page › should validate required fields" classname="auth\authentication-flows.spec.ts" time="8.259">
</testcase>
<testcase name="Authentication Flows › Login Page › should validate email format" classname="auth\authentication-flows.spec.ts" time="8.967">
</testcase>
<testcase name="Authentication Flows › Login Page › should handle login attempt with invalid credentials" classname="auth\authentication-flows.spec.ts" time="18.367">
</testcase>
<testcase name="Authentication Flows › Login Page › should navigate to register page from login" classname="auth\authentication-flows.spec.ts" time="5.873">
</testcase>
<testcase name="Authentication Flows › Register Page › should display register form with proper elements" classname="auth\authentication-flows.spec.ts" time="7.074">
</testcase>
<testcase name="Authentication Flows › Register Page › should validate required fields on registration" classname="auth\authentication-flows.spec.ts" time="18.696">
<failure message="authentication-flows.spec.ts:172:5 should validate required fields on registration" type="FAILURE">
<![CDATA[  [chromium] › auth\authentication-flows.spec.ts:172:5 › Authentication Flows › Register Page › should validate required fields on registration 

    TimeoutError: locator.click: Timeout 10000ms exceeded.
    Call log:
      - waiting for getByRole('button', { name: /create|register|sign up/i })
        - locator resolved to <button disabled type="submit" data-lov-name="Button" data-component-line="148" data-component-name="Button" data-component-file="Register.tsx" data-lov-id="src\pages\Register.tsx:148:12" data-component-path="src\pages\Register.tsx" data-component-content="%7B%22className%22%3A%22w-full%22%7D" class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-r…>Create Account</button>
      - attempting click action
        2 × waiting for element to be visible, enabled and stable
          - element is not enabled
        - retrying click action
        - waiting 20ms
        2 × waiting for element to be visible, enabled and stable
          - element is not enabled
        - retrying click action
          - waiting 100ms
        17 × waiting for element to be visible, enabled and stable
           - element is not enabled
         - retrying click action
           - waiting 500ms


      173 |       // Try to submit empty form
      174 |       const submitButton = page.getByRole('button', { name: /create|register|sign up/i });
    > 175 |       await submitButton.click();
          |                          ^
      176 |       
      177 |       // Check for validation
      178 |       const emailInput = page.getByRole('textbox', { name: /email/i });
        at C:\Users\LEGION\Desktop\Asheef\Bookconnect\booktalks-buddy\tests\e2e\auth\authentication-flows.spec.ts:175:26

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    ..\..\test-results\auth-authentication-flows--e939d-ired-fields-on-registration-chromium\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: ..\..\test-results\auth-authentication-flows--e939d-ired-fields-on-registration-chromium\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|auth-authentication-flows--e939d-ired-fields-on-registration-chromium\test-failed-1.png]]

[[ATTACHMENT|auth-authentication-flows--e939d-ired-fields-on-registration-chromium\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="Authentication Flows › Register Page › should validate password requirements" classname="auth\authentication-flows.spec.ts" time="16.577">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should navigate to login page from register" classname="auth\authentication-flows.spec.ts" time="6.587">
</testcase>
<testcase name="Authentication Flows › Navigation Flow › should handle back navigation correctly" classname="auth\authentication-flows.spec.ts" time="10.119">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Navigation Flow › should redirect unauthorized users appropriately" classname="auth\authentication-flows.spec.ts" time="3.814">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth\authentication-flows.spec.ts" timestamp="2025-07-29T07:51:03.809Z" hostname="firefox" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Authentication Flows › Landing Page Navigation › should display landing page with proper sections" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Landing Page Navigation › should navigate to login from landing page" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Landing Page Navigation › should navigate to register from landing page" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should display login form with proper elements" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should validate required fields" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should validate email format" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should handle login attempt with invalid credentials" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should navigate to register page from login" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should display register form with proper elements" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should validate required fields on registration" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should validate password requirements" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should navigate to login page from register" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Navigation Flow › should handle back navigation correctly" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Navigation Flow › should redirect unauthorized users appropriately" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth\authentication-flows.spec.ts" timestamp="2025-07-29T07:51:03.809Z" hostname="webkit" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Authentication Flows › Landing Page Navigation › should display landing page with proper sections" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Landing Page Navigation › should navigate to login from landing page" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Landing Page Navigation › should navigate to register from landing page" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should display login form with proper elements" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should validate required fields" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should validate email format" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should handle login attempt with invalid credentials" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should navigate to register page from login" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should display register form with proper elements" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should validate required fields on registration" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should validate password requirements" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should navigate to login page from register" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Navigation Flow › should handle back navigation correctly" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Navigation Flow › should redirect unauthorized users appropriately" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth\authentication-flows.spec.ts" timestamp="2025-07-29T07:51:03.809Z" hostname="Mobile Chrome" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Authentication Flows › Landing Page Navigation › should display landing page with proper sections" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Landing Page Navigation › should navigate to login from landing page" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Landing Page Navigation › should navigate to register from landing page" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should display login form with proper elements" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should validate required fields" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should validate email format" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should handle login attempt with invalid credentials" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should navigate to register page from login" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should display register form with proper elements" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should validate required fields on registration" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should validate password requirements" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should navigate to login page from register" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Navigation Flow › should handle back navigation correctly" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Navigation Flow › should redirect unauthorized users appropriately" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
<testsuite name="auth\authentication-flows.spec.ts" timestamp="2025-07-29T07:51:03.809Z" hostname="Mobile Safari" tests="14" failures="0" skipped="14" time="0" errors="0">
<testcase name="Authentication Flows › Landing Page Navigation › should display landing page with proper sections" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Landing Page Navigation › should navigate to login from landing page" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Landing Page Navigation › should navigate to register from landing page" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should display login form with proper elements" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should validate required fields" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should validate email format" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should handle login attempt with invalid credentials" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Login Page › should navigate to register page from login" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should display register form with proper elements" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should validate required fields on registration" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should validate password requirements" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Register Page › should navigate to login page from register" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Navigation Flow › should handle back navigation correctly" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
<testcase name="Authentication Flows › Navigation Flow › should redirect unauthorized users appropriately" classname="auth\authentication-flows.spec.ts" time="0">
<skipped>
</skipped>
</testcase>
</testsuite>
</testsuites>